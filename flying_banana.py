import curses
import time

from plugin import Plugin

class FlyingBanana(Plugin):
	COOLDOWN = 0.5

	def __init__(self, app):
		super().__init__(app)

		self.banana = [
			[' ', '_'],
			[' ', '/', '/', '\\'],
			[' ', 'V', ' ', ' ', '\\'],
			[' ', ' ', '\\', ' ', ' ', '\\', '_'],
			[' ', ' ', ' ', '\\', ',', "'", '.', '`', '-', '.'],
			[' ', ' ', ' ', ' ', '|', '\\', ' ', '`', '.', ' ', '`', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
			[' ', ' ', ' ', ' ', '(', ' ', '\\', ' ', ' ', '`', '.', ' ', '`', '-', '.', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', ',', '.', '-', ':'],
			[' ', ' ', ' ', ' ', ' ', ' ', '\\', ' ', '`', '.', ' ', ' ', ' ', '`', '-', '.', ' ', ' ', ' ', '`', '-', '.', '.', '_', '_', '_', '.', '.', '-', '-', '-', "'", ' ', ' ', ' ', '_', '.', '-', '-', "'", ' ', ',', "'", '/'],
			[' ', ' ', ' ', ' ', ' ', ' ', ' ', '`', '.', ' ', '`', '.', ' ', ' ', ' ', ' ', '`', '-', '.', '_', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', '.', '.', '-', '-', "'", ' ', ' ', ' ', ' ', ',', "'", ' ', '/'],
			[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '`', '.', ' ', '`', '-', '_', ' ', ' ', ' ', ' ', ' ', '`', '`', '-', '-', '.', '.', "'", "'", ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '.', '-', "'", ' ', ',', "'"],
			[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '`', '-', '_', ' ', '`', '-', '.', '_', '_', '_', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '_', '_', ',', '-', '-', "'", ' ', ' ', ' ', ',', "'"],
			[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '`', '-', '.', '_', '_', ' ', ' ', '`', '-', '-', '-', '-', '"', '"', '"', ' ', ' ', ' ', ' ', '_', '_', '.', '-', "'"],
			[' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', '`', '-', '-', '.', '.', '_', '_', '_', '_', '.', '.', '-', '-', "'"]
		]
		self.x_pos = 0
		self.last_time = time.time() - FlyingBanana.COOLDOWN


	def fixed_update(self):
		if time.time() >= self.last_time + FlyingBanana.COOLDOWN:
			self.last_time = time.time()
			for i in range(len(self.banana)):
				for j in range(len(self.banana[i])):
					try:
						self.app.stdscr.addstr(10 + i, j + self.x_pos, self.banana[i][j], curses.color_pair(3))
					except curses.error:
						self.app.stdscr.addstr(10 + i, (j + self.x_pos) - self.app.cols, self.banana[i][j], curses.color_pair(3))

			self.x_pos += 1
			if self.x_pos > self.app.cols:
				self.x_pos = 0


def init(app):
	return FlyingBanana(app)